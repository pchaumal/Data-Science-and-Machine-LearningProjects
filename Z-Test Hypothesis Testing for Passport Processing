{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":11062792,"sourceType":"datasetVersion","datasetId":6893168}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":5,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/priyankachaumal/z-test-hypothesis-testing-for-passport-processing?scriptVersionId=228091737\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"id":"7437b236","cell_type":"markdown","source":"# Z-Test: Hypothesis Testing for Passport Processing Time\n\n### Z Test: Introduction and Case Study\n\n#### What is a Z-Test?\nA **Z-test** is a statistical test used to determine whether two population means are different when the variances are known, and the sample size is large (n ≥ 30).\n\n#### Formula for Z-test:\n```math\nZ = \\frac{(\\bar{X} - \\mu)}{(\\sigma / \\sqrt{n})}\n```\nWhere:\n- **X̄** = Sample Mean\n- **μ** = Population Mean\n- **σ** = Population Standard Deviation\n- **n** = Sample Size\n\n#### When to Use a Z-Test?\n1. **When the variance (σ²) is known.**\n2. **For hypothesis testing (Acceptance/Rejection regions).**\n3. **When the sample size (n) is large (≥ 30).**\n4. **Applicable only if the data follows a Standard Normal Distribution (SND).**\n\n---\n### Case Study: Passport Processing Time\n\n#### Problem Statement\nA **passport office** claims that they process passport applications within **30 days** on average. We will conduct a hypothesis test to verify this claim, assuming:\n- Population Standard Deviation (σ) = **12.5** days\n- Significance Level (α) = **0.05**\n\n#### Step 1: Import Libraries & Load Data","metadata":{}},{"id":"94ec79d2","cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport math\nimport matplotlib.pyplot as plt\nfrom scipy import stats\n\n# Load dataset\ndf = pd.read_csv(\"/kaggle/input/passport-lyst1729241000102/passport_lyst1729241000102.csv\")\ndf = df.drop(\"Unnamed: 0\", axis=1)  # Cleaning dataset\n\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-17T14:13:58.604864Z","iopub.execute_input":"2025-03-17T14:13:58.605463Z","iopub.status.idle":"2025-03-17T14:13:58.621931Z","shell.execute_reply.started":"2025-03-17T14:13:58.605412Z","shell.execute_reply":"2025-03-17T14:13:58.620409Z"}},"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"   Processing_time\n0             16.0\n1             16.0\n2             30.0\n3             37.0\n4             25.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Processing_time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>16.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>16.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>30.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>37.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>25.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":2},{"id":"9c6ab0b2","cell_type":"markdown","source":"#### Step 2: Check for Standard Normal Distribution (SND)","metadata":{}},{"id":"a7bb8ec7","cell_type":"code","source":"sns.histplot(df['Processing_time'], kde=True)\nplt.title(\"Distribution of Processing Time\")\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-17T14:13:58.62379Z","iopub.execute_input":"2025-03-17T14:13:58.624243Z","iopub.status.idle":"2025-03-17T14:13:58.989165Z","shell.execute_reply.started":"2025-03-17T14:13:58.624204Z","shell.execute_reply":"2025-03-17T14:13:58.987868Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":3},{"id":"b6745044","cell_type":"markdown","source":"#### Step 3: Define Z-Test Function","metadata":{}},{"id":"2baec481","cell_type":"code","source":"def z_test(population_mean, population_std, sample):\n    sample_mean = np.mean(sample)\n    sample_size = len(sample)\n    \n    # Compute Z-score\n    z = (sample_mean - population_mean) / (population_std / math.sqrt(sample_size))\n    \n    # Compute p-value for two-tailed test\n    p_value = 2 * (1 - stats.norm.cdf(abs(z)))\n    \n    return z, p_value","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-17T14:13:58.991623Z","iopub.execute_input":"2025-03-17T14:13:58.992035Z","iopub.status.idle":"2025-03-17T14:13:58.998033Z","shell.execute_reply.started":"2025-03-17T14:13:58.992005Z","shell.execute_reply":"2025-03-17T14:13:58.99642Z"}},"outputs":[],"execution_count":4},{"id":"5aef1c83","cell_type":"markdown","source":"#### Step 4: Run Z-Test","metadata":{}},{"id":"7264398c","cell_type":"code","source":"z_score, p_val = z_test(30, 12.5, df['Processing_time'])\nprint(f\"Z-score: {z_score}\")\nprint(f\"P-value: {p_val}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-17T14:13:58.999684Z","iopub.execute_input":"2025-03-17T14:13:59.000135Z","iopub.status.idle":"2025-03-17T14:13:59.024118Z","shell.execute_reply.started":"2025-03-17T14:13:59.0001Z","shell.execute_reply":"2025-03-17T14:13:59.022581Z"}},"outputs":[{"name":"stdout","text":"Z-score: -1.3661039491927396\nP-value: 0.17190633894360263\n","output_type":"stream"}],"execution_count":5},{"id":"98fe3c29","cell_type":"markdown","source":"#### Step 5: Interpret Results\n- **Null Hypothesis (H₀):** The mean processing time is **30 days**.\n- **Alternative Hypothesis (H₁):** The mean processing time is **not 30 days**.\n- **Decision Rule:**\n  - If p-value **< 0.05**, reject the null hypothesis (H₀).\n  - If p-value **> 0.05**, retain the null hypothesis.\n\n#### Conclusion","metadata":{}},{"id":"18e63d33","cell_type":"code","source":"if p_val < 0.05:\n    print(\"Reject the Null Hypothesis: The company's claim is incorrect.\")\nelse:\n    print(\"Fail to Reject the Null Hypothesis: The company's claim is valid.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-17T14:13:59.025352Z","iopub.execute_input":"2025-03-17T14:13:59.025698Z","iopub.status.idle":"2025-03-17T14:13:59.04897Z","shell.execute_reply.started":"2025-03-17T14:13:59.025668Z","shell.execute_reply":"2025-03-17T14:13:59.047195Z"}},"outputs":[{"name":"stdout","text":"Fail to Reject the Null Hypothesis: The company's claim is valid.\n","output_type":"stream"}],"execution_count":6},{"id":"f8f701f0","cell_type":"markdown","source":"Since the **p-value is greater than 0.05**, we **fail to reject H₀**. This means that we **accept the company's claim** that the average processing time is **30 days**.","metadata":{}}]}