{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10378024,"sourceType":"datasetVersion","datasetId":6428644}],"dockerImageVersionId":30822,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/priyankachaumal/outlier-detection-and-cleaning-placement-data?scriptVersionId=216206464\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"---\n\n# **Outlier Detection and Treatment in Placement Data**\n\n### Improving Data Quality for Reliable Insights and Predictive Models\n\n---\n\n## **1. Introduction**\n\nOutliers are extreme values that can distort statistical analyses and the performance of machine learning models. In this project, we:\n- Detect outliers in student placement data using both Z-score and IQR methods.\n- Treat the outliers using techniques like deletion and capping.\n- Explore the data through visualizations for better understanding.\n\n---\n\n## **2. Import Libraries and Dataset**","metadata":{}},{"cell_type":"code","source":"# Import necessary libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load the dataset from the Kaggle input directory\ndf = pd.read_csv(\"/kaggle/input/exploring-the-placement-data/placement_lyst1729240397995.csv\")\n\n# Display the first few rows of the dataset\ndf.head()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:31:10.034992Z","iopub.execute_input":"2025-01-05T13:31:10.03548Z","iopub.status.idle":"2025-01-05T13:31:10.052718Z","shell.execute_reply.started":"2025-01-05T13:31:10.035437Z","shell.execute_reply":"2025-01-05T13:31:10.051382Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"---\n\n## **3. Exploratory Data Analysis (EDA)**\n\n### **3.1 Dataset Overview**","metadata":{}},{"cell_type":"code","source":"# Display dataset information\nprint(\"Dataset Shape:\", df.shape)\ndf.info()\n\n# Check for missing values\nprint(\"\\nMissing Values:\\n\", df.isnull().sum())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:31:10.054197Z","iopub.execute_input":"2025-01-05T13:31:10.05452Z","iopub.status.idle":"2025-01-05T13:31:10.069035Z","shell.execute_reply.started":"2025-01-05T13:31:10.054485Z","shell.execute_reply":"2025-01-05T13:31:10.068055Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### **3.2 Summary Statistics**","metadata":{}},{"cell_type":"code","source":"# Summary statistics to understand data distribution\ndf.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:31:10.070712Z","iopub.execute_input":"2025-01-05T13:31:10.071188Z","iopub.status.idle":"2025-01-05T13:31:10.10418Z","shell.execute_reply.started":"2025-01-05T13:31:10.071149Z","shell.execute_reply":"2025-01-05T13:31:10.102932Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### **3.3 Distribution of CGPA**","metadata":{}},{"cell_type":"code","source":"# Visualize the distribution of CGPA\nsns.histplot(df['cgpa'], kde=True, bins=20)\nplt.title('CGPA Distribution')\nplt.xlabel('CGPA')\nplt.ylabel('Frequency')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:31:10.113635Z","iopub.execute_input":"2025-01-05T13:31:10.114082Z","iopub.status.idle":"2025-01-05T13:31:10.485693Z","shell.execute_reply.started":"2025-01-05T13:31:10.114046Z","shell.execute_reply":"2025-01-05T13:31:10.484465Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"---\n\n## **4. Outlier Detection**\n\n### **4.1 Detecting Outliers in CGPA Using Z-Score Method**","metadata":{}},{"cell_type":"code","source":"# Calculate the mean and standard deviation of CGPA\nmean_cgpa = df['cgpa'].mean()\nstd_cgpa = df['cgpa'].std()\n\n# Define boundaries for outliers\nlower_fence = mean_cgpa - 3 * std_cgpa\nupper_fence = mean_cgpa + 3 * std_cgpa\n\nprint(f\"Lower Fence for CGPA: {lower_fence}\")\nprint(f\"Upper Fence for CGPA: {upper_fence}\")\n\n# Identify outliers\noutliers_below = df[df['cgpa'] < lower_fence]\noutliers_above = df[df['cgpa'] > upper_fence]\n\nprint(\"\\nOutliers Below Lower Fence:\\n\", outliers_below)\nprint(\"\\nOutliers Above Upper Fence:\\n\", outliers_above)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:31:10.487158Z","iopub.execute_input":"2025-01-05T13:31:10.487627Z","iopub.status.idle":"2025-01-05T13:31:10.500899Z","shell.execute_reply.started":"2025-01-05T13:31:10.487584Z","shell.execute_reply":"2025-01-05T13:31:10.499748Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### **4.2 Detecting Outliers in Placement Exam Marks Using IQR Method**","metadata":{}},{"cell_type":"code","source":"# Visualize placement exam marks distribution\nsns.boxplot(y=df['placement_exam_marks'])\nplt.title('Placement Exam Marks Distribution')\nplt.ylabel('Placement Exam Marks')\nplt.show()\n\n# Calculate IQR\nq1 = df['placement_exam_marks'].quantile(0.25)\nq3 = df['placement_exam_marks'].quantile(0.75)\niqr = q3 - q1\n\n# Define boundaries for outliers\nlower_bound = q1 - 1.5 * iqr\nupper_bound = q3 + 1.5 * iqr\n\nprint(f\"Lower Bound for Placement Exam Marks: {lower_bound}\")\nprint(f\"Upper Bound for Placement Exam Marks: {upper_bound}\")\n\n# Identify outliers\noutliers_below_marks = df[df['placement_exam_marks'] < lower_bound]\noutliers_above_marks = df[df['placement_exam_marks'] > upper_bound]\n\nprint(\"\\nOutliers Below Lower Bound:\\n\", outliers_below_marks)\nprint(\"\\nOutliers Above Upper Bound:\\n\", outliers_above_marks)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:31:10.502868Z","iopub.execute_input":"2025-01-05T13:31:10.503307Z","iopub.status.idle":"2025-01-05T13:31:10.732521Z","shell.execute_reply.started":"2025-01-05T13:31:10.503256Z","shell.execute_reply":"2025-01-05T13:31:10.731365Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"---\n\n## **5. Outlier Treatment**\n\n### **5.1 Removing Outliers**","metadata":{}},{"cell_type":"code","source":"# Remove outliers for CGPA\ncleaned_df = df[(df['cgpa'] >= lower_fence) & (df['cgpa'] <= upper_fence)]\n\n# Remove outliers for Placement Exam Marks\ncleaned_df = cleaned_df[(cleaned_df['placement_exam_marks'] >= lower_bound) & \n                        (cleaned_df['placement_exam_marks'] <= upper_bound)]\n\nprint(\"Shape of Data after Removing Outliers:\", cleaned_df.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:31:10.734225Z","iopub.execute_input":"2025-01-05T13:31:10.734623Z","iopub.status.idle":"2025-01-05T13:31:10.742626Z","shell.execute_reply.started":"2025-01-05T13:31:10.734584Z","shell.execute_reply":"2025-01-05T13:31:10.741257Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### **5.2 Capping Outliers**","metadata":{}},{"cell_type":"code","source":"# Cap outliers for Placement Exam Marks\ndf['placement_exam_marks_capped'] = np.where(\n    df['placement_exam_marks'] > upper_bound, upper_bound,\n    np.where(df['placement_exam_marks'] < lower_bound, lower_bound, df['placement_exam_marks'])\n)\n\n# Visualize after capping\nsns.boxplot(y=df['placement_exam_marks_capped'])\nplt.title('Placement Exam Marks After Capping')\nplt.ylabel('Placement Exam Marks (Capped)')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:31:10.743715Z","iopub.execute_input":"2025-01-05T13:31:10.744116Z","iopub.status.idle":"2025-01-05T13:31:10.957561Z","shell.execute_reply.started":"2025-01-05T13:31:10.744082Z","shell.execute_reply":"2025-01-05T13:31:10.956411Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"---\n\n## **6. Insights and Summary**\n\n### **Key Insights**\n- The dataset contained significant outliers in both CGPA and placement exam marks.\n- **Z-score Method** was effective in detecting outliers for normally distributed CGPA data.\n- **IQR Method** was better suited for skewed placement exam marks data.\n- Outlier treatment using capping and removal improved the data's integrity.\n\n### **Impact of Outlier Treatment**\n- Outlier treatment reduces the skewness of the data and ensures robust statistical and predictive analyses.\n\n---\n\n## **7. Save the Cleaned Dataset**","metadata":{}},{"cell_type":"code","source":"# Save the cleaned dataset for further use\ncleaned_df.to_csv(\"cleaned_placement_data.csv\", index=False)\nprint(\"Cleaned dataset saved successfully!\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:31:10.958592Z","iopub.execute_input":"2025-01-05T13:31:10.958907Z","iopub.status.idle":"2025-01-05T13:31:10.968687Z","shell.execute_reply.started":"2025-01-05T13:31:10.958866Z","shell.execute_reply":"2025-01-05T13:31:10.967578Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"---\n\n### **Final Visualizations for Comparison**\n\n#### Before and After Capping Placement Exam Marks\n","metadata":{}},{"cell_type":"code","source":"# Compare distributions before and after capping\nfig, ax = plt.subplots(1, 2, figsize=(12, 5))\n\nsns.boxplot(y=df['placement_exam_marks'], ax=ax[0])\nax[0].set_title('Before Capping')\nax[0].set_ylabel('Placement Exam Marks')\n\nsns.boxplot(y=df['placement_exam_marks_capped'], ax=ax[1])\nax[1].set_title('After Capping')\nax[1].set_ylabel('Placement Exam Marks')\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:31:10.969831Z","iopub.execute_input":"2025-01-05T13:31:10.970225Z","iopub.status.idle":"2025-01-05T13:31:11.377996Z","shell.execute_reply.started":"2025-01-05T13:31:10.970188Z","shell.execute_reply":"2025-01-05T13:31:11.376901Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"---","metadata":{}}]}